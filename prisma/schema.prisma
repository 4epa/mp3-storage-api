// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @default(autoincrement()) @id
  uid          String  @unique
  email        String  @unique
  nickname     String  @unique
  avatar       String?
  tracks Track[]
  reactions    Reaction[]
  albums       Album[]
  playlists    Playlist[]
  hash         String
  role         Role     @default(USER)
  createdAt String
  updatedAt String
}

model Track {
  id         Int      @default(autoincrement()) @id
  uid        String   @unique
  title      String
  duration   String
  poster String
  audio String
  published  Boolean? @default(false)
  authorId   Int?
  albumId Int?
  playlistId Int?
  reactions  Reaction[]
  author     User?    @relation(fields: [authorId], references: [id])
  album Album? @relation(fields: [albumId], references: [id])
  playlist Playlist? @relation(fields: [playlistId], references: [id])
  genres Genre[]
  createdAt String
  updatedAt String
}

model Reaction {
  id Int      @default(autoincrement()) @id
  uid String @unique
  type ReactionType @default(TRACK)
  userId Int
  trackId Int?
  playlistId Int?
  albumId Int?
  user User @relation(fields: [userId], references: [id])
  track Track? @relation(fields: [trackId], references: [id])
  playlist Playlist? @relation(fields: [playlistId], references: [id])
  album Album? @relation(fields: [albumId], references: [id])
  createdAt String
  updatedAt String
}

model Playlist {
  id Int      @default(autoincrement()) @id
  uid String @unique
  title String
  poster String?
  users User[]
  reactions Reaction[]
  tracks Track[]
  genres Genre[]
  createdAt String
  updatedAt String
}

model Album {
  id Int      @default(autoincrement()) @id
  uid String @unique
  title String
  poster String?
  authors User[]
  reactions Reaction[]
  tracks Track[]
  genres Genre[]
  createdAt String
  updatedAt String
}

model Genre {
  id     Int   @default(autoincrement()) @id
  name   String   @unique()
  tracks Track[]
  albums Album[]
  playlists Playlist[]
}

enum Role {
  USER
  ARTIST
  MODERATOR
}

enum ReactionType {
  TRACK
  COLLECTION
}